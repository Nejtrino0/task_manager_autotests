{"name": "test_invalid_credentials[LoginPage]", "status": "broken", "statusDetails": {"message": "waiting.exceptions.TimeoutExpired: Timeout of 30 seconds expired waiting for Ждем пока кнопка станет кликабельной", "trace": "self = <test_login_page.TestLoginPage object at 0x000002AD9DA41C48>, driver = <base.ui.login_page.page_login.LoginPage object at 0x000002AD9DA5E148>\n\n    def test_invalid_credentials(self, driver):\n>       driver.click_login_button()\n\ntests\\test_ui\\test_login_page.py:9: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbase\\ui\\login_page\\page_login.py:18: in click_login_button\n    wait(lambda: self.login_button.click() is None, waiting_for='Ждем пока кнопка станет кликабельной')\nvenv\\lib\\site-packages\\webium\\wait.py:16: in wait\n    return wait_lib(*args, **kwargs)\nvenv\\lib\\site-packages\\waiting\\__init__.py:18: in wait\n    for x in iterwait(result=result, *args, **kwargs):\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\npredicate = <function LoginPage.click_login_button.<locals>.<lambda> at 0x000002AD9DA70C18>, timeout_seconds = 30, sleep_seconds = (1, None)\nresult = <waiting._Result object at 0x000002AD9DA75FC8>, waiting_for = 'Ждем пока кнопка станет кликабельной', on_poll = None\nexpected_exceptions = <class 'selenium.common.exceptions.WebDriverException'>\n\n    def iterwait(predicate, timeout_seconds=None, sleep_seconds=1, result=None, waiting_for=None,\n                 on_poll=None, expected_exceptions=()):\n    \n        if not isinstance(expected_exceptions, tuple) and not (isinstance(expected_exceptions, type)\n                                                               and issubclass(expected_exceptions, Exception)):\n            raise IllegalArgumentError(\n                'expected_exceptions should be tuple or Exception subclass')\n        if on_poll is not None and not callable(on_poll):\n            raise IllegalArgumentError(\n                'on_poll should be callable')\n        timeout = _make_deadline(timeout_seconds)\n        if result is None:\n            result = _Result()\n        if waiting_for is None:\n            waiting_for = str(predicate)\n        sleep_generator = _get_sleep_generator(timeout, sleep_seconds)\n        while True:\n            with _end_sleeping(next(sleep_generator)) as cancel_sleep:\n                try:\n                    result.result = predicate()\n                    if on_poll is not None:\n                        on_poll()\n                except expected_exceptions:\n                    pass\n                except StopIteration:\n                    exc_info = sys.exc_info()\n                    raise NestedStopIteration(exc_info)\n                if result.result:\n                    cancel_sleep()\n                    return\n                if timeout.is_expired():\n>                   raise TimeoutExpired(timeout_seconds, waiting_for)\nE                   waiting.exceptions.TimeoutExpired: Timeout of 30 seconds expired waiting for Ждем пока кнопка станет кликабельной\n\nvenv\\lib\\site-packages\\waiting\\__init__.py:56: TimeoutExpired"}, "parameters": [{"name": "driver", "value": "<class 'base.ui.login_page.page_login.LoginPage'>"}], "start": 1608994365718, "stop": 1608994395723, "uuid": "f88abd52-55e8-42d9-a04e-5d681b2db0ca", "historyId": "070703ad17a690fcfba1777c3f41a884", "testCaseId": "f963c72bdf7c63674f984d0815eaf38b", "fullName": "tests.test_ui.test_login_page.TestLoginPage#test_invalid_credentials", "labels": [{"name": "tag", "value": "login_page"}, {"name": "parentSuite", "value": "tests.test_ui"}, {"name": "suite", "value": "test_login_page"}, {"name": "subSuite", "value": "TestLoginPage"}, {"name": "host", "value": "LAPTOP-VDKHCJMI"}, {"name": "thread", "value": "20380-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_ui.test_login_page"}]}